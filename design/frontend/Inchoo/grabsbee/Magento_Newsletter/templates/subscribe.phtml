<?php

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\ReCaptcha;
use Magento\Framework\Escaper;
use Magento\Newsletter\Block\Subscribe;

/** @var Subscribe $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */
/** @var ReCaptcha $recaptcha */
/** @var HeroiconsOutline $heroicons */

$heroicons = $viewModels->require(HeroiconsOutline::class);

// Do not replace this with $viewModels->require(ReCaptcha::class); that might break the dependency
// on the Magento_ReCaptchaNewsletter module
$recaptcha = $block->getData('viewModelRecaptcha');
?>
<div class="">
    <form
        class="form subscribe mx-3"
        action="<?= $escaper->escapeUrl($block->getFormActionUrl()) ?>"
        method="post"
        x-data="initNewsletterForm()"
        @submit.prevent="submitForm()"
        id="newsletter-validate-detail"
        aria-label="<?= $escaper->escapeHtmlAttr(__('Subscribe to Newsletter')) ?>"
    >
        <h2
            class="pt-5 text-center text-sm text-white font-bold tracking-widest uppercase"
            id="footer-newsletter-heading"
        >
            <?= $escaper->escapeHtml(__('Newsletter')) ?>

        </h2>
        <p class="font-primary font-normal text-xs text-white leading-5 text-center py-5"><?= $escaper->escapeHtmlAttr(__('Sign up for our newsletter and be the first to find out about new products, discounts and more')) ?></p>
        <div>

        <div class="desktop:flex desktop:flex-row desktop:items-center desktop:justify-around">

            <label for="newsletter-sub" class="sr-only"><?= $escaper->escapeHtmlAttr(__('Subscribe to Newsletter')) ?></label>
            <input type="email" pattern="[^@]+@[^@]+\.[a-zA-Z]{2,6}" required type="text" aria-label="<?= __('Label') ?>" id="newsletter-sub" name="newsletter-subscribe" placeholder="Subscribe to our newsletter!" class="desktop:w-[364px] focus:border-text-color focus:ring-0 block border-1 border-gray-25 h-11 font-primary w-full font-normal text-sm leading-6">

            <?= $block->getBlockHtml('formkey') ?>
            <?= $recaptcha ? $recaptcha->getInputHtml(ReCaptcha::RECAPTCHA_FORM_ID_NEWSLETTER) : '' ?>


        <button class="hover:bg-primary-light transition duration-300 desktop:w-[130px] my-5 btn__primary w-full h-11 text-sm leading-6 tracking-wider" aria-label="<?= __('Subscribe to out newsletter button') ?>">
                <?= $escaper->escapeHtml(__('Subscribe')) ?>
            </button>
        </div>

        </div>
        <div>
            <template x-if="displayErrorMessage">
                <p class="flex items-center text-red">
                    <span class="inline-block w-8 h-8 mr-3">
                        <?= $heroicons->exclamationCircleHtml(); ?>
                    </span>
                    <template x-for="errorMessage in errorMessages">
                        <span x-html="errorMessage"></span>
                    </template>
                </p>
            </template>
        </div>
    </form>
    <div class="w-full">
        <?= $recaptcha ? $recaptcha->getLegalNoticeHtml(ReCaptcha::RECAPTCHA_FORM_ID_NEWSLETTER) : '' ?>
    </div>

    <script>
        function initNewsletterForm() {
            return {
                errors: 0,
                hasCaptchaToken: 0,
                displayErrorMessage: false,
                errorMessages: [],
                setErrorMessages(messages) {
                    this.errorMessages = [messages]
                    this.displayErrorMessage = this.errorMessages.length
                },
                submitForm() {
                    // Do not rename $form, the variable is expected to be declared in the recaptcha output
                    const $form = document.querySelector('#newsletter-validate-detail');
                    <?= $recaptcha ? $recaptcha->getValidationJsHtml(ReCaptcha::RECAPTCHA_FORM_ID_NEWSLETTER) : '' ?>

                    if (this.errors === 0) {
                        $form.submit();
                    }
                }
            }
        }
    </script>
</div>
