<?php

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\Store;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Hyva\Theme\ViewModel\SvgIcons;

// phpcs:disable Generic.Files.LineLength.TooLong

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var Store $viewModelStore */
$viewModelStore = $viewModels->require(Store::class);

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

/** @var SvgIcons $hyvaicons */
$hyvaicons = $viewModels->require(SvgIcons::class);

$title = (string) $block->getTitle();
$items = $block->getItems() ?? [];
if (is_object($items) && $items instanceof Iterator) {
    $items = iterator_to_array($items);
}
if (!$itemCount = count($items)) {
    return '';
}
$sliderItemRenderer = $block->getChildBlock('slider.item.template');
$sliderIndex = 1;
?>
<script>
    'use strict';

    function initSliderComponent() {
        return {
            active: 0,
            itemCount: 0,
            getSlider() {
                return this.$root.querySelector('.js_slides');
            },
            pageSize: 1,
            pageFillers: 0,
            calcPageSize() {
                const slider = this.getSlider();
                if (slider) {
                    this.itemCount = slider.querySelectorAll('.js_slide').length;
                    this.pageSize = Math.round(slider.clientWidth / slider.querySelector('.js_slide').clientWidth);
                    this.pageFillers = (
                        this.pageSize * Math.ceil(this.itemCount / this.pageSize)
                    ) - this.itemCount;
                }
            },
            calcActive() {
                const slider = this.getSlider();
                if (slider) {
                    const sliderItems = this.itemCount + this.pageFillers;
                    const calculatedActiveSlide = slider.scrollLeft / (slider.scrollWidth / sliderItems);
                    this.active = Math.round(calculatedActiveSlide / this.pageSize) * this.pageSize;
                }
            },
            scrollPrevious() {
                this.scrollTo(this.active - this.pageSize);
            },
            scrollNext() {
                this.scrollTo(this.active + this.pageSize);
            },
            scrollTo(idx) {
                const slider = this.getSlider();
                if (slider) {
                    const slideWidth = slider.scrollWidth / (this.itemCount + this.pageFillers);
                    slider.scrollLeft = Math.floor(slideWidth) * idx;
                    this.active = idx;
                }
            },
            skipCarouselToNavigation(navSelector) {
                const element = document.getElementById(navSelector)
                if (element) {
                    element.scrollIntoView({behavior: 'smooth', block: 'end'});
                    const button = element.querySelector('button:not([disabled])');
                    this.$nextTick(() => button && button.focus({preventScroll: true}))
                }
            }
        }
    }
</script>
<?php if ($items): ?>
    <section class="relative"
             x-data="initSliderComponent()"
             x-init="calcPageSize();"
             x-id="['slider-nav', 'slider-end', 'slider-desc']"
             @resize.window.debounce="calcPageSize(); $nextTick( function() { calcActive() })"
             role="group"
             aria-roledescription="<?= $escaper->escapeHtml(__('Slider')) ?>"
             aria-label="<?= $escaper->escapeHtml(__('Latest items')) ?>"
             :aria-describedby="$id('slider-desc')"
    >
    <span
        class="sr-only"
        :id="$id('slider-desc')"
        tabindex="-1"
    >
            <?= $escaper->escapeHtml(__('Navigating through the elements of the carousel is possible using the tab key. You can skip the carousel or go straight to carousel navigation using the skip links.')) ?>
    </span>
        <a
            :href="`#${$id('slider-end')}`"
            class="action skip sr-only focus:not-sr-only focus:absolute focus:z-30 focus:bg-white"
        >
            <?= $escaper->escapeHtml(__('Press to skip the slider')) ?>
        </a>
        <button
            x-show="itemCount > pageSize"
            type="button"
            class="action skip sr-only focus:not-sr-only focus:absolute focus:z-30 focus:bg-white"
            @click.prevent="skipCarouselToNavigation($id('slider-nav'))"
        >
            <?= $escaper->escapeHtml(__('Press to go to carousel navigation')) ?>
        </button>

        <div class="relative w-full overflow-x-hidden focus-within:ring-1 active:ring-0 ring-blue-500 ring-opacity-50">
            <div class="relative flex flex-nowrap w-full overflow-auto transition-all js_slides snap"
                 @scroll.debounce="calcActive"
            >
                <?php foreach ($items as $item): ?>
                    <div role="group"
                         x-id="['slide-desc']"
                         aria-roledescription="<?= $escaper->escapeHtml(__('Slide')) ?>"
                         :aria-hidden="<?= (int) $sliderIndex ?> > active && <?= (int) $sliderIndex ?> <= (active + pageSize) ? 'false' : 'true'"
                         aria-label="<?= $escaper->escapeHtmlAttr(__('Slide %1 of %2', $sliderIndex++, count($items))) ?>"
                         :aria-describedby="$id('slide-desc')"
                         class="relative flex shrink-0 w-full js_slide"
                    >
                        <?= $sliderItemRenderer->setItem($item)->toHtml() ?>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>

        <template x-if="itemCount > pageSize">
            <div
                role="group"
                aria-label="<?= $escaper->escapeHtml(__('Slide controls')) ?>"
                :id="$id('slider-nav')"
            >
                <div class="hidden absolute top-1/2 -translate-y-1/2 md:flex md:justify-between md:w-full">

                    <button
                        role="button"
                        aria-label="<?= $escaper->escapeHtml(__('Previous slide')) ?>"
                        class="w-[2.875rem] height-[3rem] bg-white opacity-50 hover:opacity-75"
                        :class="{ 'opacity-25 pointer-events-none' : active === 0 }"
                        @click="scrollPrevious"
                    >
                   <span class="flex items-center justify-center py-[0.688rem] px-[0.563rem]">
                        <?= $hyvaicons->renderHtml('paginationL', '',28, 28); ?>
                   </span>
                    </button>

                    <button
                        role="button"
                        aria-label="<?= $escaper->escapeHtml(__('Next slide')) ?>"
                        class="w-[2.875rem] height-[3rem] bg-white opacity-50 hover:opacity-75 transition duration-300"
                        :class="{ 'opacity-25 pointer-events-none' : active >= itemCount-pageSize }"
                        @click="scrollNext">
                       <span class="flex items-center justify-center py-[0.688rem] px-[0.563rem]">
                            <?= $hyvaicons->renderHtml('paginationR', '', 28, 28); ?>
                       </span>
                    </button>

                </div>

                <div class="flex gap-3 justify-center items-center absolute w-full pt-3 desktop:pt-6">
                    <?php for ($i=0; $i < $itemCount; $i++): ?>
                        <button
                            role="button"
                            aria-label="<?= $escaper->escapeHtmlAttr(__('Show slide %1 of %2', $i + 1, $itemCount)) ?>"
                            class="w-2 h-2 rounded-full shadow-md cursor-pointer hover:bg-gray-25 transition duration-300"
                            @click="scrollTo(<?= (int) $i ?>)"
                            :class="{
                            'w-2 h-2 bg-secondary': active === <?= (int) $i ?>,
                            'w-2 h-2 bg-gray-10': active !== <?= (int) $i ?>,
                            'hidden': (pageSize !== 1 && !!(<?= (int) $i ?> % pageSize))
                        }"
                        >
                        </button>
                    <?php endfor; ?>
                </div>
            </div>
        </template>
        <span :id="$id('slider-end')" tabindex="-1"></span>
    </section>
<?php endif ?>
